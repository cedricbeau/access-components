---

---

<section class="component-section">
  <h3>Cartes de Contenu Structur√©es</h3>
  <div x-data="card()">
    <div class="card-grid">
      <template x-for="card in cards" :key="card.id">
        <article
          class="card"
          role="article"
          tabindex="0"
          :aria-labelledby="`card-title-${card.id}`"
          :aria-describedby="`card-desc-${card.id}`"
          @click="selectCard(card)"
          @keydown.enter="selectCard(card)"
          @keydown.space.prevent="selectCard(card)"
        >
          <div class="card-image" role="img" :aria-label="card.imageAlt">
            <span x-text="card.imageText"></span>
          </div>

          <div class="card-content">
            <h3
              class="card-title"
              :id="`card-title-${card.id}`"
              x-text="card.title"
            >
            </h3>

            <p
              class="card-description"
              :id="`card-desc-${card.id}`"
              x-text="card.description"
            >
            </p>

            <div
              class="card-actions"
              role="group"
              :aria-label="`Actions pour ${card.title}`"
            >
              <button
                class="btn btn-primary"
                @click.stop="primaryAction(card)"
                :aria-label="`Voir les d√©tails de ${card.title}`"
              >
                Voir d√©tails
              </button>
              <button
                class="btn btn-secondary"
                @click.stop="secondaryAction(card)"
                :aria-label="`Partager ${card.title}`"
              >
                Partager
              </button>
            </div>
          </div>
        </article>
      </template>
    </div>

    <div role="status" aria-live="polite" class="sr-only">
      <span
        x-show="selectedCard"
        x-text="selectedCard ? `Carte s√©lectionn√©e: ${selectedCard.title}` : ''"
      ></span>
    </div>
  </div>
</section>

<script>
  import { defineComponent } from "@utils/utils.js";

  /**
   * Card Component Logic
   *
   * Defines the interactive functionality for a card-based interface with accessibility features.
   *
   * @component
   *
   * @property {Object|null} selectedCard - Tracks the currently selected card
   * @property {Array} cards - Collection of card data objects with project information
   *
   * @method selectCard
   * @param {Object} card - Card object to be selected
   * @description Handles card selection and announces the selection via screen reader
   *
   * @method primaryAction
   * @param {Object} card - Card object for primary action
   * @description Triggers and announces the primary action (displaying details) for a card
   *
   * @method secondaryAction
   * @param {Object} card - Card object for secondary action
   * @description Triggers and announces the secondary action (sharing) for a card
   *
   * @method announce
   * @param {string} message - Message to be announced
   * @description Creates a temporary ARIA live region to announce actions to screen readers
   *
   * @example Card object structure:
   * {
   *   id: number,
   *   title: string,
   *   description: string,
   *   imageText: string,
   *   imageAlt: string
   * }
   */
  defineComponent("card", () => {
    return {
      selectedCard: null,
      cards: [
        {
          id: 1,
          title: "Projet Alpha",
          description:
            "Une application web moderne avec une interface utilisateur intuitive et des fonctionnalit√©s avanc√©es.",
          imageText: "üöÄ",
          imageAlt: "Ic√¥ne de fus√©e repr√©sentant le projet Alpha",
        },
        {
          id: 2,
          title: "Projet Beta",
          description:
            "Un syst√®me de gestion complet pour optimiser les processus m√©tier de votre entreprise.",
          imageText: "‚öôÔ∏è",
          imageAlt: "Ic√¥ne engrenage repr√©sentant le projet Beta",
        },
        {
          id: 3,
          title: "Projet Gamma",
          description:
            "Une solution mobile cross-platform pour atteindre votre audience sur tous les appareils.",
          imageText: "üì±",
          imageAlt: "Ic√¥ne de t√©l√©phone repr√©sentant le projet Gamma",
        },
      ],

      selectCard(card) {
        this.selectedCard = card;
        this.announce(`Carte s√©lectionn√©e: ${card.title}`);
      },

      primaryAction(card) {
        this.announce(`Affichage des d√©tails pour ${card.title}`);
      },

      secondaryAction(card) {
        this.announce(`Partage de ${card.title}`);
      },

      announce(message) {
        const announcer = document.createElement("div");
        announcer.setAttribute("role", "status");
        announcer.setAttribute("aria-live", "polite");
        announcer.className = "sr-only";
        announcer.textContent = message;
        document.body.appendChild(announcer);
        setTimeout(() => document.body.removeChild(announcer), 1000);
      },
    };
  });
</script>

<style>
  :root {
    /* .card-grid */
    --card-grid-min-width: 18.75rem;
    --card-grid-gap: 1.25rem;
    --card-grid-margin-top: 1.25rem;
    --card-grid-column-mobile: 1;

    /* .card */
    --card-background: #fff;
    --card-border-radius: 0.5rem;
    --card-overflow: hidden;
    --card-shadow: 0 0.125rem 0.625rem rgba(0, 0, 0, 0.1);
    --card-hover-shadow: 0 0.25rem 1.25rem rgba(0, 0, 0, 0.15);
    --card-hover-translate: -0.125rem;
    --card-focus-outline: 0.125rem;
    --card-focus-offset: 0.125rem;
    --card-focus-color: #4a90e2;
    --card-transition: transform 0.3s, box-shadow 0.3s;

    /* .card-image */
    --card-image-width: 100%;
    --card-image-height: 12.5rem;
    --card-gradient-start: #667eea;
    --card-gradient-end: #764ba2;
    --card-image-color: #fff;
    --card-image-font-size: 1.25rem;

    /* .card-content */
    --card-content-padding: 1.25rem;

    /* .card-title */
    --card-title-margin: 0 0 0.625rem 0;
    --card-title-size: 1.25rem;
    --card-title-weight: 600;
    --card-title-color: #2c3e50;

    /* .card-desc */
    --card-desc-margin: 0 0 0.9375rem 0;
    --card-desc-color: #666;
    --card-desc-line-height: 1.5;

    /* .card-actions */
    --card-actions-gap: 0.625rem;
  }

  .card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--card-grid-min-width), 1fr));
    gap: var(--card-grid-gap);
    margin-top: var(--card-grid-margin-top);
  }

  .card {
    background: var(--card-background);
    border-radius: var(--card-border-radius);
    overflow: var(--card-overflow);
    box-shadow: var(--card-shadow);
    transition: var(--card-transition);
    cursor: pointer;

    &:hover {
      transform: translateY(var(--card-hover-translate));
      box-shadow: var(--card-hover-shadow);
    }

    &:focus {
      outline: var(--card-focus-outline) solid var(--card-focus-color);
      outline-offset: var(--card-focus-offset);
    }
  }

  .card-image {
    display: grid;
    place-content: center;
    width: var(--card-image-width);
    height: var(--card-image-height);
    background: linear-gradient(
      135deg,
      var(--card-gradient-start) 0%,
      var(--card-gradient-end) 100%
    );
    color: var(--card-image-color);
    font-size: var(--card-image-font-size);
  }

  .card-content {
    padding: var(--card-content-padding);
  }

  .card-title {
    margin: var(--card-title-margin);
    font-size: var(--card-title-size);
    font-weight: var(--card-title-weight);
    color: var(--card-title-color);
  }

  .card-description {
    margin: var(--card-desc-margin);
    color: var(--card-desc-color);
    line-height: var(--card-desc-line-height);
  }

  .card-actions {
    display: flex;
    gap: var(--card-actions-gap);
  }

  @media (max-width: 768px) {
    .card-grid {
      grid-template-columns: var(--card-grid-column-mobile);
    }
  }
</style>
