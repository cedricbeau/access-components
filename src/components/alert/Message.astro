---

---

<section class="component-section">
  <h2>Messages</h2>
  <div x-data="{
  messageList: [],
      nextId: 1,

      addMessage(type, title, content) {
        const message = {
          id: this.nextId++,
          type: type,
          title: title,
          content: content,
        };
        this.messageList.push(message);

        if (type !== 'error') {
          setTimeout(() => {
            this.removeMessage(message.id);
          }, 5000);
        }
      },

      removeMessage(id) {
        this.messageList = this.messageList.filter((msg) => msg.id !== id);
      },
  }">
    <button
      class="btn"
      @click="addMessage('info', 'Information', 'Ceci est un message informatif.')"
      >Message Info</button
    >
    <button
      class="btn"
      @click="addMessage('success', 'Succès', 'Opération réalisée avec succès.')"
      >Message Succès</button
    >
    <button
      class="btn"
      @click="addMessage('warning', 'Attention', 'Ceci est un avertissement.')"
      >Message Warning</button
    >
    <button
      class="btn"
      @click="addMessage('error', 'Erreur', 'Une erreur vient de se produire.')"
      >Message Erreur</button
    >

    <template x-for="message in messageList" :key="message.id">
      <div
        :class="'message ' + message.type"
        role="alert"
        :aria-labelledby="'message-title-' + message.id"
      >
        <div class="message-header">
          <div
            class="message-title"
            :id="'message-title-' + message.id"
            x-text="message.title"
          >
          </div>
          <button
            class="message-close"
            @click="removeMessage(message.id)"
            aria-label="Fermer le message"
          >
            ×
          </button>
        </div>
        <div x-text="message.content"></div>
      </div>
    </template>
  </div>
</section>

<style>
  /* Message Styles */
  .message {
    padding: 1rem;
    border-radius: 4px;
    margin: 1rem 0;
    border-left: 4px solid;
  }

  .message.info {
    background: #d1ecf1;
    border-color: #bee5eb;
    color: #0c5460;
  }

  .message.success {
    background: #d4edda;
    border-color: #c3e6cb;
    color: #155724;
  }

  .message.warning {
    background: #fff3cd;
    border-color: #ffeaa7;
    color: #856404;
  }

  .message.error {
    background: #f8d7da;
    border-color: #f5c6cb;
    color: #721c24;
  }

  .message-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }

  .message-title {
    font-weight: bold;
  }

  .message-close {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 2px;
  }

  .message-close:hover,
  .message-close:focus {
    background: rgba(0, 0, 0, 0.1);
    outline: 2px solid currentColor;
  }
</style>