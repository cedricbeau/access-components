---

---

<section class="component-section">
  <h3>Banners d'Information</h3>
  <div
    class="demo-controls"
    x-data="{
            showInfoBanner() {
                $dispatch('show-banner', {
                    type: 'info',
                    title: 'Nouvelle fonctionnalité',
                    message: 'Découvrez notre nouvelle interface utilisateur.'
                });
            },
            showSuccessBanner() {
                $dispatch('show-banner', {
                    type: 'success',
                    title: 'Mise à jour réussie',
                    message: 'Le système a été mis à jour avec succès.'
                });
            },
            showWarningBanner() {
                $dispatch('show-banner', {
                    type: 'warning',
                    title: 'Maintenance programmée',
                    message: 'Une maintenance est prévue demain de 2h à 4h.'
                });
            },
            showErrorBanner() {
                $dispatch('show-banner', {
                    type: 'error',
                    title: 'Service indisponible',
                    message: 'Le service de paiement est temporairement indisponible.'
                });
            }
        }"
  >
    <button class="btn" @click="showInfoBanner()"> Banner Info </button>
    <button class="btn" @click="showSuccessBanner()"> Banner Succès </button>
    <button class="btn" @click="showWarningBanner()">
      Banner Avertissement
    </button>
    <button class="btn" @click="showErrorBanner()"> Banner Erreur </button>
  </div>

  <div
    class="banner-container"
    x-data="banner()"
    @show-banner.window="showBanner($event.detail.type, $event.detail.title, $event.detail.message)"
    @keydown.escape.window="hideAllBanners()"
  >
    <template x-for="banner in banners" :key="banner.id">
      <div
        :class="['banner', banner.type]"
        role="banner"
        :aria-labelledby="'banner-title-' + banner.id"
        :aria-describedby="'banner-message-' + banner.id"
        x-show="banner.visible"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="transform translate-x-full opacity-0"
        x-transition:enter-end="transform translate-x-0 opacity-100"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="transform translate-x-0 opacity-100"
        x-transition:leave-end="transform translate-x-full opacity-0"
      >
        <div class="banner-icon" aria-hidden="true">
          <span x-show="banner.type === 'info'">ℹ️</span>
          <span x-show="banner.type === 'success'">✅</span>
          <span x-show="banner.type === 'warning'">⚠️</span>
          <span x-show="banner.type === 'error'">❌</span>
        </div>
        <div class="banner-content">
          <h3
            :id="'banner-title-' + banner.id"
            class="banner-title"
            x-text="banner.title"
          >
          </h3>
          <p
            :id="'banner-message-' + banner.id"
            class="banner-message"
            x-text="banner.message"
          >
          </p>
        </div>
        <button
          class="banner-close"
          @click="hideBanner(banner.id)"
          :aria-label="'Fermer le banner ' + banner.title"
          type="button"
        >
          ×
        </button>
      </div>
    </template>
  </div>
</section>

<script>
  import { defineComponent } from "@utils/utils.js";
  defineComponent("banner", () => {
    return {
      banners: [],
      nextId: 1,

      showBanner(type, title, message, persistent = false) {
        const id = this.nextId++;
        const banner = {
          id,
          type,
          title,
          message,
          visible: true,
          persistent,
        };

        this.banners.push(banner);

        if (!persistent) {
          setTimeout(() => {
            this.hideBanner(id);
          }, 10000);
        }

        return id;
      },

      hideBanner(id) {
        const bannerIndex = this.banners.findIndex((b) => b.id === id);
        if (bannerIndex !== -1) {
          this.banners[bannerIndex].visible = false;

          setTimeout(() => {
            this.banners = this.banners.filter((b) => b.id !== id);
          }, 300);
        }
      },

      hideAllBanners() {
        this.banners.forEach((banner) => {
          banner.visible = false;
        });
        setTimeout(() => {
          this.banners = [];
        }, 300);
      },
    };
  });
</script>

<style>
  :root {
    --banner-gap: 0.75rem;
    --banner-padding: 1rem;
    --banner-margin: 0 0 0.75rem;
    --banner-border-radius: 0.5rem;
    --banner-box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);

    --banner-info-color: #1e40af;
    --banner-info-background: #eff6ff;
    --banner-info-border-color: #bfdbfe;

    --banner-success-color: #166534;
    --banner-success-background: #f0fdf4;
    --banner-success-border-color: #bbf7d0;

    --banner-warning-color: #c2410c;
    --banner-warning-background: #fff7ed;
    --banner-warning-border-color: #fed7aa;

    --banner-error-color: #9f1239;
    --banner-error-background: #fef2f2;
    --banner-error-border-color: #fecaca;

    --banner-icon-size: 1.5rem;
    --banner-margin: 0.125rem 0 0;

    --banner-title-margin: 0 0 0.25rem;
    --banner-title-font-weight: 600;
    --banner-title-font-size: 0.875rem;

    --banner-message-margin: 0;
    --banner-message-font-size: 0.8125rem;

    --banner-close-padding: 0.25rem;
    --banner-close-border: none;
    --banner-close-border-radius: 0.25rem;
    --banner-background: none;
    --banner-font-size: 1.125rem;
    --banner-close-line-height: 1;
    --banner-close-opacity: 0.7;
    --banner-outline: 2px solid currentColor;
  }

  .banner-container {
    position: fixed;
    top: 1.25rem;
    right: 1.25rem;
    z-index: 1000;
    max-width: 25rem;
  }

  .banner {
    display: flex;
    align-items: flex-start;
    gap: var(--banner-gap);
    padding: var(--banner-padding);
    margin: var(--banner-margin);
    border: 1px solid transparent;
    border-radius: var(--banner-border-radius);
    box-shadow: var(--banner-box-shadow);

    &.info {
      border-color: var(--banner-info-border-color);
      background: var(--banner-info-background);
      color: var(--banner-info-color);
    }

    &.success {
      border-color: var(--banner-success-border-color);
      background: var(--banner-success-background);
      color: var(--banner-success-color);
    }

    &.warning {
      border-color: var(--banner-warning-border-color);
      background: var(--banner-warning-background);
      color: var(--banner-warning-color);
    }

    &.error {
      border-color: var(--banner-error-border-color);
      background: var(--banner-error-background);
      color: var(--banner-error-color);
    }
  }

  .banner-icon {
    font-size: var(--banner-icon-size);
    margin-top: var(--banner-margin);
  }

  .banner-content {
    flex: 1;
  }

  .banner-title {
    margin: var(--banner-title-margin);
    font-weight: var(--banner-title-font-weight);
    font-size: var(--banner-title-font-size);
  }

  .banner-message {
    margin: var(--banner-message-margin);
    font-size: var(--banner-message-font-size);
  }

  .banner-close {
    padding: var(--banner-close-padding);
    border-radius: var(--banner-close-border-radius);
    background: var(--banner-background);
    border: var(--banner-close-border);
    font-size: var(--banner-font-size);
    line-height: var(--banner-close-line-height);
    opacity: var(--banner-close-opacity);
    cursor: pointer;

    &:is(:hover, :focus) {
      opacity: 1;
      outline: var(--banner-outline);
    }
  }

  .demo-controls {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }
</style>
